#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed May  1 16:55:45 2019

@author: renuka
"""

import numpy as np
from scipy.integrate import odeint
from scipy.constants import c, G
import matplotlib.pyplot as plt
from math import *
from mpl_toolkits.mplot3d import Axes3D
import matplotlib.animation as animation

def func(z, T, M):
    # z
    t, r, theta, phi, pt, pr, ptheta, pphi = z
    # derivatives
    # dpthetadT = (cos(theta)*(ptheta)**2)/((r**2)*sin(phi)**3)
    # dprdT = (pphi**2/r**3)-(M/(r-2*M)**2)-((M*pr**2)/r**2)
    # dtdT = (1+(2*M/r))*pt
    # drdT = (1-(2*M/r)*pr)
    # dthetadT = ptheta/(r**2)
    # dphidT = pphi/((r**2)*(sin(theta)**2))
    # return 
    return [((1+(2*M/r))*pt), ((1-(2*M/r))*pr), (ptheta/(r**2)), (pphi/((r**2)*(sin(theta)**2))), 0, ((pphi**2/r**3)-(M/((r-2*M)**2))-((M*pr**2)/r**2)), ((cos(theta)*(ptheta)**2)/((r**2)*sin(phi)**3)), 0]

z0=[0, 5000, pi/2, pi/4, -1, 0.5, 0, 40]

T = np.linspace(0, 5000, 100000)

pt = -1
dptdT = 0
ptheta = 0
dpphidT = 0
M = 9000
 

xx=odeint(func, z0, T, args=(M,))

plt.figure(1)
plt.axes(projection="3d")
plt.plot(T, xx[:,0])
plt.show()

# Rs = 2*G*M/c**2